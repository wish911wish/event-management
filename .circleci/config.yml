version: 2
jobs:
  build:
    machine: true
    steps:
      - checkout:
      - run:
          name: Setup common environment variables
          command: |
            echo 'export ECR_REPOSITORY_NAME="${AWS_RESOURCE_NAME_PREFIX}"' >> $BASH_ENV
            echo 'export FULL_IMAGE_NAME="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_REPOSITORY_NAME}:latest"' >> $BASH_ENV
      - run:
          name: Setup AWS CLI
          command: |
            curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
            unzip awscli-bundle.zip
            sudo ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws

      - run:
          name: Setup AWS ecs-cli
          command: |
            sudo curl -o /usr/local/bin/ecs-cli https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest
            sudo chmod +x /usr/local/bin/ecs-cli
            ecs-cli --version


      - run:
            name: docker-compose up
            command: |
              echo $ENV_FILE | base64 --decode > .env
              docker-compose up -d
              sleep 1m
              docker-compose run web rails db:create
              docker-compose run web rails db:migrate
              docker-compose run web bundle exec rspec
              docker images

      - run:
          name: Tagging Docker Image
          command: docker tag project_web:latest 198606590602.dkr.ecr.ap-northeast-1.amazonaws.com/event-management_web:latest

      - run:
          name: Login to AWS ECR
          command: eval $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)

      - run:
          name: Push Docker Image
          command: |
            docker push ${FULL_IMAGE_NAME}



      - run:
          name: Setup AWS ecs-cli
          command: |
            ecs-cli compose -f docker-compose.yml up


